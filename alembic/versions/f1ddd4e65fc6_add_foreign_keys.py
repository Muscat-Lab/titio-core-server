"""add_foreign_keys

Revision ID: f1ddd4e65fc6
Revises: 41e8ec69320f
Create Date: 2023-09-28 04:23:10.035231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f1ddd4e65fc6"
down_revision: Union[str, None] = "41e8ec69320f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(
        op.f("areas_performance_id_fkey"),
        "areas",
        "performances",
        ["performance_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("discounts_performance_id_fkey"),
        "discounts",
        "performances",
        ["performance_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("seat_grades_performance_id_fkey"),
        "seat_grades",
        "performances",
        ["performance_id"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("seats_area_id_fkey"), "seats", "areas", ["area_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("seats_seat_grade_id_fkey"),
        "seats",
        "seat_grades",
        ["seat_grade_id"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("seats_seat_grade_id_fkey"), "seats", type_="foreignkey")
    op.drop_constraint(op.f("seats_area_id_fkey"), "seats", type_="foreignkey")
    op.drop_constraint(
        op.f("seat_grades_performance_id_fkey"), "seat_grades", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("discounts_performance_id_fkey"), "discounts", type_="foreignkey"
    )
    op.drop_constraint(op.f("areas_performance_id_fkey"), "areas", type_="foreignkey")
    # ### end Alembic commands ###
